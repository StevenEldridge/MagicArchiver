@page "/login"

@using MagicArchiver.Services
@using MagicArchiver.Models
@using System.Text.Json
@using FluentResults

@inject NavigationManager Navigation
@inject IPocketBase       PocketBase
@inject IGlobalState      GlobalState

<div class="text-center m-5">
  <h1>Login</h1>
  <div
    class = "mx-auto"
    style = "max-width: 400px; width: 80%"
  >
    <div class="input-group mb-3">
      <span
        class = "input-group-text"
        style = "width: 100px"
      >
        Username
      </span>
      <input
        type        = "text"
        class       = "form-control"
        placeholder = "Chandra4"
        @bind       = "username"
      />
    </div>
    <div class="input-group mb-1">
      <span
        class = "input-group-text"
        style = "width: 100px"
      >
        Password
      </span>
    <input
      type        = "text"
      class       = "form-control"
      placeholder = "badPass123"
      @bind       = "password"
    />
    </div>
    <div
      class = "text-start mb-3"
      style = "font-size: 0.85em"
    >
      New?
      <a href="createaccount">
        Create an Account
      </a>
    </div>
    <div>
      <button
        type     = "button"
        class    = "btn btn-primary"
        @onclick = "LoginUser"
      >
        Login
      </button>
    </div>
  </div>
  @if (error != null) {
    <div
      class = "alert alert-warning mt-3"
      role  = "alert"
    >
      @error
    </div>
  }
</div>


@code {
  string  username = "";
  string  password = "";
  string? error    = null;


  private async void LoginUser() {
    Result<LoginDetails> response = await PocketBase.Login(
      username,
      password
    );

    if (response.IsSuccess) {
      GlobalState.SetLoginDetails(response.Value);
      Navigation.NavigateTo("collection");
    }
    else {
      Console.WriteLine("ERROR");
      // TODO: Print all errors
      error = response.Errors.First().ToString();
      StateHasChanged();
    }
  }
}
